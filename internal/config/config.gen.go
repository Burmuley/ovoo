package config

// DO NOT EDIT - Code generated by https://github.com/Burmuley/disconfig
type OvooConfig struct {
	Api    ApiConfig    `json:"api,required"`
	Milter MilterConfig `json:"milter,required"`
}

func NewOvooConfig(api ApiConfig, milter MilterConfig) *OvooConfig {
	return &OvooConfig{
		Api:    api,
		Milter: milter,
	}
}

type ApiConfig struct {
	Database     ApiDBConfig              `json:"database,required"`
	DefaultAdmin ApiDefaultAdminConfig    `json:"default_admin,required"`
	Domain       string                   `json:"domain,required"`
	ListenAddr   string                   `json:"listen_addr"`
	Log          OvooLogConfig            `json:"log,required"`
	OIDC         map[string]ApiOIDCConfig `json:"oidc,required"`
	Tls          ApiTLSConfig             `json:"tls,required"`
}

func NewApiConfig(database ApiDBConfig, defaultadmin ApiDefaultAdminConfig, domain string, log OvooLogConfig, oidc map[string]ApiOIDCConfig, tls ApiTLSConfig) *ApiConfig {
	return &ApiConfig{
		Database:     database,
		DefaultAdmin: defaultadmin,
		Domain:       domain,
		ListenAddr:   "127.0.0.1:8808",
		Log:          log,
		OIDC:         oidc,
		Tls:          tls,
	}
}

func (c *ApiConfig) WithListenAddr(value string) *ApiConfig {
	c.ListenAddr = value
	return c
}

type OvooLogConfig struct {
	Destination string `json:"destination,required"`
	Level       string `json:"level,required"`
}

func NewOvooLogConfig(destination string, level string) *OvooLogConfig {
	return &OvooLogConfig{
		Destination: destination,
		Level:       level,
	}
}

type ApiTLSConfig struct {
	Cert string `json:"cert,required"`
	Key  string `json:"key,required"`
}

func NewApiTLSConfig(cert string, key string) *ApiTLSConfig {
	return &ApiTLSConfig{
		Cert: cert,
		Key:  key,
	}
}

type ApiDefaultAdminConfig struct {
	FirstName string `json:"first_name,required"`
	LastName  string `json:"last_name,required"`
	Login     string `json:"login,required"`
	Password  string `json:"password,required"`
}

func NewApiDefaultAdminConfig(firstname string, lastname string, login string, password string) *ApiDefaultAdminConfig {
	return &ApiDefaultAdminConfig{
		FirstName: firstname,
		LastName:  lastname,
		Login:     login,
		Password:  password,
	}
}

type ApiOIDCConfig struct {
	ClientId     string `json:"client_id,required"`
	ClientSecret string `json:"client_secret,required"`
	Issuer       string `json:"issuer,required"`
}

func NewApiOIDCConfig(clientid string, clientsecret string, issuer string) *ApiOIDCConfig {
	return &ApiOIDCConfig{
		ClientId:     clientid,
		ClientSecret: clientsecret,
		Issuer:       issuer,
	}
}

type ApiDBConfig struct {
	Config ApiDBGormConfig `json:"config,required"`
	DBType string          `json:"type,required"`
}

func NewApiDBConfig(config ApiDBGormConfig, dbtype string) *ApiDBConfig {
	return &ApiDBConfig{
		Config: config,
		DBType: dbtype,
	}
}

type ApiDBGormConfig struct {
	ConnectionString string `json:"connection_string,required"`
	Driver           string `json:"driver,required"`
}

func NewApiDBGormConfig(connectionstring string, driver string) *ApiDBGormConfig {
	return &ApiDBGormConfig{
		ConnectionString: connectionstring,
		Driver:           driver,
	}
}

type MilterConfig struct {
	Api        MilterApiConfig `json:"api,required"`
	Domain     string          `json:"domain,required"`
	ListenAddr string          `json:"listen_addr"`
	Log        OvooLogConfig   `json:"log,required"`
}

func NewMilterConfig(api MilterApiConfig, domain string, log OvooLogConfig) *MilterConfig {
	return &MilterConfig{
		Api:        api,
		Domain:     domain,
		ListenAddr: "127.0.0.1:6785",
		Log:        log,
	}
}

type MilterApiConfig struct {
	Addr          string `json:"addr,required"`
	AuthToken     string `json:"auth_token,required"`
	TlsSkipVerify bool   `json:"tls_skip_verify,required"`
}

func NewMilterApiConfig(addr string, authtoken string, tlsskipverify bool) *MilterApiConfig {
	return &MilterApiConfig{
		Addr:          addr,
		AuthToken:     authtoken,
		TlsSkipVerify: tlsskipverify,
	}
}
