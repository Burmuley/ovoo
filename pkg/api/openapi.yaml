openapi: 3.1.0
info:
  title: Domovoi API
  description: Domovoi API
  version: 1.0.0
servers:
  - url: 'https://localhost:8080'
components:
  schemas:
    error:
      type: object
      required:
        - error_id
        - error_description
      properties:
        error_id:
          type: integer
        error_description:
          type: string
    id:
      type: string
      x-go-type-skip-optional-pointer: true
    email:
      type: string
      format: email
      x-go-type: string
      x-go-type-skip-optional-pointer: true
    service_name:
      type: string
      format: hostname
      x-go-type-skip-optional-pointer: true
    alias:
      type: object
      required:
        - email
        - service_name
      properties:
        id:
          $ref: '#/components/schemas/id'
        email:
          $ref: '#/components/schemas/email'
        protected_address:
          $ref: '#/components/schemas/protected-address'
        service_name:
          $ref: '#/components/schemas/service_name'
        comment:
          type: string
          x-go-type-skip-optional-pointer: true
        active:
          type: boolean
          x-go-type-skip-optional-pointer: true
    aliases-get-response:
      type: array
      items:
        $ref: '#/components/schemas/alias'
    aliases-post-response:
      type: object
      required:
        - alias
      properties:
        alias:
          $ref: '#/components/schemas/alias'
    alias-email-get-response:
      type: object
      required:
        - alias
      properties:
        alias:
          $ref: '#/components/schemas/alias'
    alias-email-delete-response:
      $ref: '#/components/schemas/alias-email-get-response'
    protected-address:
      type: object
      x-go-type-skip-optional-pointer: true
      required:
        - email
        - id
      properties:
        id:
          type: string
        email:
          $ref: '#/components/schemas/email'
        active:
          type: boolean
          x-go-type-skip-optional-pointer: true
paths:
  /aliases:
    get:
      description: Retrieves all available aliases owned by the authenticated user
      responses:
        200:
          description: List of aliases
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aliases-get-response'
        401:
          description: Unauthenticated request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

    post:
      description: Create new alias for a protected email owned by the user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/alias'
      responses:
        201:
          description: A new alias has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aliases-post-response'
        401:
          description: Unauthenticated request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        403:
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /aliases/email/{email}:
    get:
      description: Retrieves detailed information about an Alias matching email in the request
      parameters:
        - in: path
          name: email
          required: true
          schema:
            $ref: '#/components/schemas/email'
      responses:
        200:
          description: Detailed information
          content:
            application/json:
              schema:
#                $ref: '#/components/schemas/alias'
                 $ref: '#/components/schemas/alias-email-get-response'
        401:
          description: Unauthenticated request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        403:
          description: User requested information about the Alias is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: Alias matching the email in the request was not found
    delete:
      parameters:
        - in: path
          name: email
          required: true
          schema:
            $ref: '#/components/schemas/email'
      responses:
        200:
          description: Information about deleted alias
          content:
            application/json:
              schema:
#                $ref: '#/components/schemas/alias'
                 $ref: '#/components/schemas/alias-email-delete-response'
        401:
          description: Unauthenticated request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        403:
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: Alias requested by email was not found in the database
  /aliases/{id}:
    get:
      description: Retrieves detailed information about an Alias
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/id'
      responses:
        200:
          description: Retrieves detailed information about Alias
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alias'
        401:
          description: Unauthenticated request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        403:
          description: User requested information about the Alias is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: Alias requested was not found
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/id'
      responses:
        200:
          description: Information about deleted alias
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alias'
        401:
          description: Unauthenticated request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        403:
          description: User requested deletion of the Alias is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: Alias requested was not found
  /protected-addresses:
    get:
      description: Retrieve list of Protected Addresses
      responses:
        200:
          description: List of Protected Addresses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/protected-address'
        401:
          description: Unauthenticated request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      description: Create new Protected Address
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/protected-address'
      responses:
        201:
          description: A new Protected Address has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protected-address'
        401:
          description: Unauthenticated request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /protected-addresses/{id}:
    get:
      description: Retrieves detailed information about requested Protected Email ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/email'
      responses:
        200:
          description: Detailed information of the requested Protected Email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protected-address'
        401:
          description: Unauthenticated request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        403:
          description: User requested information about the Protected Address is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: Alias requested by email was not found in the database
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/protected-address'
      responses:
        200:
          description: Information about deleted Protected Address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protected-address'
        401:
          description: Unauthenticated request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        403:
          description: User requested deletions of the Protected Address is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: Protected Address requested was not found
  /protected-addresses/email/{email}:
    get:
      description: Retrieves detailed information about requested Protected Address Email
      parameters:
        - in: path
          name: email
          required: true
          schema:
            $ref: '#/components/schemas/email'
      responses:
        200:
          description: Detailed information of the requested Protected Address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protected-address'
        401:
          description: Unauthenticated request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        403:
          description: User requested information about the Protected Address is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: Protected Address requested by email was not found
    delete:
      parameters:
        - in: path
          name: email
          required: true
          schema:
            $ref: '#/components/schemas/protected-address'
      responses:
        200:
          description: Information about deleted Protected Address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protected-address'
        401:
          description: Unauthenticated request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        403:
          description: User requested deletions of the Protected Address is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: Protected Address requested by email was not found
